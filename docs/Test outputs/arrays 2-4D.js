//2d array
[
	[0,0,0],
	[0,0,0],
	[0,0,0]
]

//3d
[
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	]
]

//4d
[
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	]
]


playTurnBoardUpdate(8, [
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	]
], [1,2,1])

/*should return 
[
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,0,0],
		[0,0,0]
	],
	[
		[0,0,0],
		[0,8,0],
		[0,0,0]
	]
]
*/
playTurnBoardUpdate(8, [
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
], [0,1,2])

/*should return 
[
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[8,0,1],
		[0,2,0]
	]
]
*/
playTurnBoardUpdate(8, [
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	]
],
[0,0,0,0])
/* should return
[
	[
		[
			[8,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	]
]*/
playTurnBoardUpdate(8, [
	[
		[
			[1,0,0],
			[0,1,0],
			[0,0,1]
		],
		[
			[2,0,0],
			[0,2,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,3,0],
			[0,0,3]
		]
	],
	[
		[
			[2,0,0],
			[0,3,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,4,0],
			[0,0,3]
		],
		[
			[4,0,0],
			[0,5,0],
			[0,0,4]
		]
	],
	[
		[
			[5,0,1],
			[0,0,0],
			[0,0,0]
		],
		[
			[4,0,0],
			[0,0,0],
			[0,0,1]
		],
		[
			[3,0,0],
			[0,0,0],
			[1,0,0]
		]
	]
],
[2,0,1,2])
/* should return
[
	[
		[
			[1,0,0],
			[0,1,0],
			[0,0,1]
		],
		[
			[2,0,0],
			[0,2,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,3,0],
			[0,0,3]
		]
	],
	[
		[
			[2,0,0],
			[0,3,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,4,0],
			[0,0,3]
		],
		[
			[4,0,0],
			[0,5,0],
			[0,0,4]
		]
	],
	[
		[
			[5,0,1],
			[0,0,0],
			[0,0,0]
		],
		[
			[4,0,8],
			[0,0,0],
			[0,0,1]
		],
		[
			[3,0,0],
			[0,0,0],
			[1,0,0]
		]
	]
]*/
chunkFinder(
[
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
],
1,
[0,1,2]))
/*should return 
[1,0,1]
*/

chunkFinder(
[
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
],
2,
[0,1,2]))
/*should return 
[
	[0,2,0],
	[1,0,1],
	[0,2,0]
]
*/

chunkFinder(
[
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
],
3,
[0,1,2]))
/*should return 
[
	[
		[1,0,1],
		[0,1,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
]
*/

playersTurnFinder(
[
	[
		[1,0,1],
		[0,2,0],
		[2,0,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
])
/*
should return
1
*/

playersTurnFinder(
[
	[
		[1,0,1],
		[0,2,0],
		[2,1,2]
	],
	[
		[2,0,2],
		[0,1,0],
		[1,0,1]
	],
	[
		[0,2,0],
		[1,0,1],
		[0,2,0]
	]
])
/*
should return
2
*/
playersTurnFinder(
[
	[
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,2,0],
			[0,0,0],
			[1,0,0]
		],
		[
			[0,0,0],
			[2,0,1],
			[0,1,2]
		],
		[
			[0,2,0],
			[0,0,0],
			[0,1,0]
		]
	],
	[
		[
			[0,2,0],
			[0,0,0],
			[0,1,0]
		],
		[
			[0,0,0],
			[0,1,0],
			[0,0,0]
		],
		[
			[0,2,0],
			[0,0,0],
			[0,0,0]
		]
	]
])
/*should return
2
*/

playersTurnFinder(
[
	[
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,2,0],
			[0,0,0],
			[1,0,0]
		],
		[
			[0,0,0],
			[2,0,1],
			[0,1,2]
		],
		[
			[0,2,0],
			[0,0,0],
			[0,1,0]
		]
	],
	[
		[
			[0,2,0],
			[0,2,0],
			[0,1,0]
		],
		[
			[0,0,0],
			[0,1,0],
			[0,0,0]
		],
		[
			[0,2,0],
			[0,1,2],
			[0,0,0]
		]
	]
])
/*should return
1
*/
coordinateIsOccupied(
[
	[
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,2,0],
			[0,0,0],
			[1,0,0]
		],
		[
			[0,0,0],
			[2,0,1],
			[0,1,2]
		],
		[
			[0,2,0],
			[0,0,0],
			[0,1,0]
		]
	],
	[
		[
			[0,2,0],
			[0,2,0],
			[0,1,0]
		],
		[
			[0,0,0],
			[0,1,0],
			[0,0,0]
		],
		[
			[0,2,0],
			[0,1,2],
			[0,0,0]
		]
	]
],
[0, 0, 0, 0])
/*
should return 1
*/

coordinateIsOccupied(
[
	[
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[1,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,2,0],
			[0,0,0],
			[1,0,0]
		],
		[
			[0,0,0],
			[2,0,1],
			[0,1,2]
		],
		[
			[0,2,0],
			[0,0,0],
			[0,1,0]
		]
	],
	[
		[
			[0,2,0],
			[0,2,0],
			[0,1,0]
		],
		[
			[0,0,0],
			[0,1,0],
			[0,0,0]
		],
		[
			[0,2,0],
			[0,1,2],
			[0,0,0]
		]
	]
],
[2, 1, 1, 2])
/*
should return
0
*/

terminal4DPrint([
	[
		[
			[1,0,0],
			[0,1,0],
			[0,0,1]
		],
		[
			[2,0,0],
			[0,2,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,3,0],
			[0,0,3]
		]
	],
	[
		[
			[2,0,0],
			[0,3,0],
			[0,0,2]
		],
		[
			[3,0,0],
			[0,4,0],
			[0,0,3]
		],
		[
			[4,0,0],
			[0,5,0],
			[0,0,4]
		]
	],
	[
		[
			[5,0,1],
			[0,0,0],
			[0,0,0]
		],
		[
			[4,0,0],
			[0,0,0],
			[0,0,1]
		],
		[
			[3,0,0],
			[0,0,0],
			[1,0,0]
		]
	]
])
/*
should return 
1 0 0 | 2 0 0 | 5 0 1 
0 1 0 | 0 3 0 | 0 0 0 
0 0 1 | 0 0 2 | 0 0 0 
- - - - - - - - - - -
2 0 0 | 3 0 0 | 4 0 0 
0 2 0 | 0 4 0 | 0 0 0 
0 0 2 | 0 0 3 | 0 0 1 
- - - - - - - - - - -
3 0 0 | 4 0 0 | 3 0 0 
0 3 0 | 0 5 0 | 0 0 0 
0 0 3 | 0 0 4 | 1 0 0 
*/

/*
1 0 0 | 0 0 0 | 0 0 0 
0 1 0 | 0 0 0 | 0 0 0 
3 0 1 | 0 0 0 | 0 0 0 
- - - - - - - - - - -
2 0 0 | 2 3 0 | 2 0 0 
0 0 0 | 0 0 0 | 0 0 0 
0 0 0 | 0 0 0 | 0 0 0 
- - - - - - - - - - -
4 0 0 | 0 0 0 | 0 0 3 
0 4 0 | 0 0 0 | 0 0 0 
0 0 4 | 0 0 0 | 0 0 0 
*/
/*
1:
[0,0,0,0]
[0,0,1,1]
[0,0,2,2]

2:
[0,1,0,0]
[1,1,0,0]
[2,1,0,0]

3:
[0,0,2,0]
[1,1,2,1]
[2,2,2,2]

4:
[0,2,0,0]
[0,2,1,1]
[0,2,2,2]

5:
[2,1,1,1]
[1,1,1,1]
[1,0,1,1]

*/
a = [
	[
		[
			[1,0,0],
			[0,1,0],
			[3,0,1]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[4,0,0],
			[0,4,0],
			[0,0,4]
		]
	],
	[
		[
			[0,0,0],
			[0,5,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,5,0],
			[0,3,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,5,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,3]
		]
	]
]
tacToe.checkWin(a, 1, 4) //should return 1
tacToe.checkWin(a, 2, 4) //should return 2
tacToe.checkWin(a, 3, 4) //should return 3
tacToe.checkWin(a, 4, 4) //should return 4
tacToe.checkWin(a, 5, 4) //should return 0
//----------------------------------------
a = [
	[
		[
			[1,0,0],
			[0,0,0],
			[3,0,1]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[4,0,0],
			[0,4,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		]
	],
	[
		[
			[0,0,0],
			[0,0,0],
			[0,0,0]
		],
		[
			[2,0,0],
			[0,5,0],
			[0,0,0]
		],
		[
			[0,0,3],
			[0,0,0],
			[0,0,0]
		]
	]
]
tacToe.checkWin(a, 1, 4) //should return 0
tacToe.checkWin(a, 2, 4) //should return 0
tacToe.checkWin(a, 3, 4) //should return 0
tacToe.checkWin(a, 4, 4) //should return 0
tacToe.checkWin(a, 5, 4) //should return 0
